<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean
        id="embeddedMongoDb"
        class="io.github.sully6768.camel.examples.spring.mongodb.EmbeddedMongoDb"
        init-method="init"
        destroy-method="destroy" />

    <bean
        id="myDb"
        class="com.mongodb.Mongo"
        depends-on="embeddedMongoDb">
        <constructor-arg index="0">
            <bean class="com.mongodb.MongoURI">
                <constructor-arg
                    index="0"
                    value="mongodb://localhost:27017/db" />
            </bean>
        </constructor-arg>
    </bean>

    <bean
        id="mongodb"
        class="org.apache.camel.component.mongodb.MongoDbComponent" />

    <camelContext
        id="camelContext"
        trace="false"
        xmlns="http://camel.apache.org/schema/spring">
        <!-- here is a sample which processes the input files
         (leaving them in place - see the 'noop' flag)
          -->

        <dataFormats>
            <xmljson id="xmljson" />
        </dataFormats>

        <route>
            <from uri="file:src/data?noop=true" />
            <log message="XML Message Logger: ${body}" />
            <marshal ref="xmljson" />
            <convertBodyTo type="String" />
            <log message="JSON Message Logger: ${body}" />
            <to uri="mongodb:myDb?database=test_db&amp;collection=doc&amp;operation=insert" />
            <setBody>
                <constant>{"city":"London"}</constant>
            </setBody>
            <to uri="mongodb:myDb?database=test_db&amp;collection=doc&amp;operation=findOneByQuery" />
            <log message="James Message Logger: ${body}" />
            <setBody>
                <constant>{"city":"Tampa"}</constant>
            </setBody>
            <to uri="mongodb:myDb?database=test_db&amp;collection=doc&amp;operation=findOneByQuery" />
            <log message="Hiram Message Logger: ${body}" />
        </route>
        
    </camelContext>
</beans>
